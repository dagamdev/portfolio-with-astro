---
import type { ProjectData } from '@/types'
import TextRender from './TextRender.astro'

interface Props {
  styleType: 'sm' | 'lg'
  project: ProjectData
}
const { styleType, project } = Astro.props
---

{styleType === 'lg'
  ? <article class="w-full space-y-4">
      <img 
        class="rounded-lg"
        src={`/api/project/screenshots/${project.id}/dark.webp`} 
        alt={`Screenshot de ${project.title?.[0].content}`}
      >
      <TextRender class="text-2xl font-bold text-green-500 dark:text-green-300" textData={project.title} />
      <ul class="flex gap-4 flex-wrap">
        {project.skills.map(sk => <li
          class={`flex gap-x-1.5 px-2.5 py-1 text-sm rounded-full border shadow shadow-gray-300 dark:shadow-gray-800 ` + (sk.color === undefined
            ? 'dark:border-gray-700 dark:bg-gray-500/20'
            : `bg-${sk.color}-500/40`
          )}
        >
          <img src={`/api/skill/${sk.id}/image.svg`} alt={`Skill de ${sk.name}`} width="20" height="20">
          <span>{sk.name}</span>
        </li>)}  
      </ul>
      <TextRender class='paragraph whitespace-pre-wrap text-balance' textData={project.description} />
    </article>
  : <a href={'/project/' + project.id} 
      class="block rounded-lg max-w-[300px] border border-neutral-600 overflow-hidden shadow-gray-400/10 bg-neutral-900">
      <img 
        src={`/api/project/screenshots/${project.id}/dark.webp`} 
        alt={`Screenshot de ${project.title?.[0].content}`}
      >
      <section class="p-3">
        <h3 class="mb-2 text-xl font-semibold text-gray-400">{project.title?.[0].content}</h3>
        <p class="paragraph mb-4 text-pretty">{project.description[0].content}</p>
      </section>
    </a>
}

<style>
  .paragraph {
    display: -webkit-box;
    overflow: hidden;
    -webkit-line-clamp: 5;
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
  }
</style>
